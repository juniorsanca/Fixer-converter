{"remainingRequest":"/Users/user/Desktop/com-dep-reg-o/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/user/Desktop/com-dep-reg-o/src/components/communes/RechercheCommunes.vue?vue&type=template&id=d480a5bc","dependencies":[{"path":"/Users/user/Desktop/com-dep-reg-o/src/components/communes/RechercheCommunes.vue","mtime":1612737329606},{"path":"/Users/user/Desktop/com-dep-reg-o/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/com-dep-reg-o/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/user/Desktop/com-dep-reg-o/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/user/Desktop/com-dep-reg-o/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Desktop/com-dep-reg-o/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8Zm9ybSBAc3VibWl0PSJvblN1Ym1pdCI+CiAgICAgICAgPGlvbi10b29sYmFyIGNvbG9yPSJsaWdodCI+CiAgICAgICAgICAgIDxpb24taW5wdXQgIGlkPSJ2aWxsZSIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4IgogICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJ2aWxsZSIKICAgICAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSJ2aWxsZSIKICAgICAgICAgICAgICAgICAgICAgICAgQGlucHV0PSJ2aWxsZSA9ICRldmVudC50YXJnZXQudmFsdWUiIHNob3ctY2FuY2VsLWJ1dHRvbj0ibmV2ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJDb2RlIHBvc3RhbCBvdSB2aWxsZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InNlYXJjaCI+CiAgICAgICAgICAgIDwvaW9uLWlucHV0PgogICAgICAgICAgICA8aW9uLWJ1dHRvbiBleHBhbmQ9ImZ1bGwiIHR5cGU9InN1Ym1pdCIgY29sb3I9ImRhcmsiPlJFQ0hFUkNIRVI8L2lvbi1idXR0b24+CiAgICAgICAgPC9pb24tdG9vbGJhcj4KICAgIDwvZm9ybT4KICAgIDxpb24tYnV0dG9uIGV4cGFuZD0iZnVsbCIgY29sb3I9ImxpZ2h0IiBAY2xpY2s9InJlbG9hZFBhZ2UiID5yZXNldDwvaW9uLWJ1dHRvbj4KICAgIDxSZXN1bHRhdERlUmVjaGVyY2hlIHYtYmluZDpyZXN1bHQ9InJlc3VsdCIvPgo="},{"version":3,"sources":["/Users/user/Desktop/com-dep-reg-o/src/components/communes/RechercheCommunes.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/user/Desktop/com-dep-reg-o/src/components/communes/RechercheCommunes.vue","sourceRoot":"","sourcesContent":["<template>\n    <form @submit=\"onSubmit\">\n        <ion-toolbar color=\"light\">\n            <ion-input  id=\"ville\" style=\"margin-left: 10px\"\n                        name=\"ville\"\n                        :value=\"ville\"\n                        @input=\"ville = $event.target.value\" show-cancel-button=\"never\"\n                        placeholder=\"Code postal ou ville\"\n                        class=\"search\">\n            </ion-input>\n            <ion-button expand=\"full\" type=\"submit\" color=\"dark\">RECHERCHER</ion-button>\n        </ion-toolbar>\n    </form>\n    <ion-button expand=\"full\" color=\"light\" @click=\"reloadPage\" >reset</ion-button>\n    <ResultatDeRecherche v-bind:result=\"result\"/>\n</template>\n<script>\n    import ResultatDeRecherche from \"@/components/communes/ResultatDeRecherche\";\n    import axios from \"axios\";\n    export default {\n        name: 'RechercheCommunes',\n        components: {\n            ResultatDeRecherche,\n        },\n        data () {\n            return {\n                ville: \"\",\n                result:null,\n            };\n        },\n        methods: {\n            onSubmit(e){\n                e.preventDefault(this.ville)\n                console.log(this.ville)\n                {\n                    const isValidName = /^[a-zA-Z]+$/.test(this.ville)\n                    const isValidZip = /^[0-9]{5}?$/.test(this.ville)\n                    if (isValidZip){\n                        axios.get(`https://geo.api.gouv.fr/communes?codePostal=${this.ville}` )\n                            .then((response) => {\n                                response.data\n                                this.result = response.data\n                                console.log(this.result)\n                            });\n                    } else {\n                        if (isValidName)\n                            axios.get(`https://geo.api.gouv.fr/communes?nom=${this.ville}&boost=population&fields=population,departement,codesPostaux,region` )\n                                .then((response) => {\n                                    response.data\n                                        this.result = response.data\n                                        console.log(this.result)\n                              });\n                        if (!isValidName || this.ville === \"\"){\n                            alert('veuillez entrer une ville ou code postal valide, merci!');\n                        }\n                    }\n                }\n            },\n            reloadPage(){\n                this.result = null\n            }\n        },\n    };\n</script>"]}]}