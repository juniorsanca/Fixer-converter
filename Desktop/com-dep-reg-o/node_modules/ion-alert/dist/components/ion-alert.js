var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Component, Input, Output, EventEmitter } from '@angular/core';
var IonAlert = /** @class */ (function () {
    function IonAlert() {
        this.hide = false;
        this.closeClicked = new EventEmitter();
    }
    /**
     * handle close click
     * @param {[type]} event [description]
     */
    IonAlert.prototype.handleClick = function (event) {
        this.hide = true;
        this.closeClicked.emit(event);
    };
    __decorate([
        Input()
    ], IonAlert.prototype, "color", void 0);
    __decorate([
        Input()
    ], IonAlert.prototype, "icon", void 0);
    __decorate([
        Input()
    ], IonAlert.prototype, "ios", void 0);
    __decorate([
        Input()
    ], IonAlert.prototype, "md", void 0);
    __decorate([
        Input()
    ], IonAlert.prototype, "closeButton", void 0);
    __decorate([
        Input()
    ], IonAlert.prototype, "hide", void 0);
    __decorate([
        Output()
    ], IonAlert.prototype, "closeClicked", void 0);
    IonAlert = __decorate([
        Component({
            selector: 'ion-alert',
            template: "\n\t<ion-toolbar [color]=\"color\" no-padding class=\"alert {{color}}\" *ngIf=\"!hide\">\n\t\t<ion-list no-lines>\n\t\t\t<ion-item text-wrap>\n\t\t\t\t<ion-icon *ngIf=\"icon\" [name]=\"icon\" [ios]=\"ios\" [md]=\"md\" item-start ></ion-icon>\n\t\t\t\t<p><ng-content></ng-content></p>\n\t\t\t\t<button *ngIf=\"close\" (click)=\"handleClick($event)\" ion-button clear icon-only item-end color=\"dark\"><ion-icon name=\"close\"></ion-icon></button>\n\t\t\t</ion-item>\n\t\t</ion-list>\n\t</ion-toolbar>\n  "
        })
    ], IonAlert);
    return IonAlert;
}());
export { IonAlert };
//# sourceMappingURL=ion-alert.js.map